log_format structured '{"level": "info", "time": "$time_iso8601", "app": "nginx", "project": "bedrock", "status": $status, "request_method": "$request_method", "request_uri": "$request_uri", "request_id": "$request_id", "request_time": "$request_time", "original_host": "$http_x_real_ip"}';

server {
    listen 80;

    server_name  _;
    # Hide the Nginx version from headers+error pages
    server_tokens off;

    # Enable response compression
    gzip on;
    gzip_vary on;
    gzip_types      text/plain
                    text/css
                    application/json
                    application/javascript
                    application/vnd.api+json;

    gzip_proxied    no-cache no-store private expired auth;

    # Security headers
    # 90 day timeout
    add_header Strict-Transport-Security "max-age=7776000; includeSubDomains" always;
    add_header X-Frame-Options "deny" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "same-origin" always;

    error_log /dev/stdout info;
    access_log /dev/stdout structured;

    location /robots.txt {
        add_header Content-Type text/plain;
        expires 1h;
        return 200 "User-agent: *\nDisallow: /\n";
    }

    location /static/ {
        gzip on;
        expires 1h;
        autoindex off;
        alias /app-static/;
    }

    # Send everything else to Django by default
    location / {
        # Avoid BREACH style issues where compression + reflected attacker content can
        # allow secret exfiltration
        gzip off;

        # 10MB body upload limit by default (plus 1 mb for headers, excessive I know)
        client_max_body_size 11m;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
        proxy_set_header X-Request-Id $request_id;
        proxy_set_header Host $http_host;

        proxy_redirect off;
        proxy_buffering on;

        proxy_pass http://django_prod_server;
    }
}

upstream django_prod_server {
    # TODO: Swap gunicorn to unix socket?
    server 127.0.0.1:8000 fail_timeout=0 max_conns=8;
}
